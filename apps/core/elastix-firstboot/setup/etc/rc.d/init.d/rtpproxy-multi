#!/bin/bash
#
# Startup script for rtpproxy
#
# chkconfig: - 84 15
# description: A symmetric RTP proxy
#
# processname: rtpproxy

### BEGIN INIT INFO
# Provides: rtpproxy
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $network $syslog
# Default-Start:
# Default-Stop: 0 1 6
# Short-Description: A symmetric RTP proxy
# Description: A symmetric RTP proxy
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

prog=rtpproxy
rtpproxy=/usr/bin/$prog

lockfile=/var/lock/subsys/rtpproxy-multi
pidfile=/var/run/$prog.pid

OPTIONS=
BASE_PORT=7722
OPTIONS_BRIDGE=()

# User-defined options and/or overrides of the variables,
# listed above, should go there:
[ -e /etc/sysconfig/rtpproxy-multi ] && . /etc/sysconfig/rtpproxy-multi

RETVAL=0

start() {
	echo -n $"Starting $prog (multiple mode): "

	# check whether rtpproxy was already started
	if pidofproc -p $pidfile > /dev/null 2>&1 ; then
		echo -n "already running" && warning && echo
		return 0
	fi

	echo
	for rtpbridge in ${OPTIONS_BRIDGE[*]} 
	do
		echo -n "    rtpproxy at udp:127.0.0.1:$BASE_PORT bridge $rtpbridge: "
		daemon $rtpproxy -p $pidfile-$BASE_PORT -u rtpproxy -s udp:127.0.0.1:$BASE_PORT $rtpbridge $OPTIONS
		RETVAL=$?
		echo
		[ $RETVAL != 0 ] && return $RETVAL
#		sleep 0.5
		rm -f $pidfile-$BASE_PORT
		let BASE_PORT++
	done
	pidof $prog > $pidfile
	touch $lockfile
	return $RETVAL
}

stop() {
	echo -n $"Stopping $prog: "

	# check whether rtpproxy was already started
	if ! pidofproc -p $pidfile > /dev/null 2>&1 ; then
		echo -n "not running" && warning && echo
		return 0
	fi

	killproc -p $pidfile $prog
	RETVAL=$?
	echo
	[ $RETVAL = 0 ] && rm -f $lockfile $pidfile
	return $RETVAL
}

# See how we were called.
case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	status)
		status -p $pidfile $prog
		RETVAL=$?
		;;
	restart|force-reload)
		stop
		start
		;;
	reload)
		echo -n $"Reloading $prog: not supported" && failure && echo
		RETVAL=3
		;;
	condrestart|try-restart)
		if [ -f $pidfile ] ; then
			stop
			start
		fi
		;;
	*)
		echo $"Usage: $prog {start|stop|restart|condrestart|status|help}"
		RETVAL=2
esac

exit $RETVAL
