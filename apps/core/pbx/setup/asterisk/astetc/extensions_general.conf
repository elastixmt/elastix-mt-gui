[from-pstn]
include =>from-pstn-custom
include =>ext-did
include =>ext-did-catchall

[from-pstn-e164-us]
include =>from-pstn-e164-us-custom
exten => _+1NXXNXXXXXX/_+1NXXNXXXXXX,1,Set(CALLERID(number)=${CALLERID(number):2})
exten => _+1NXXNXXXXXX/_NXXNXXXXXX,2,Goto(from-pstn,${EXTEN:2},1)
exten => _+1NXXNXXXXXX/_+X.,1,Set(CALLERID(number)=011${CALLERID(number):1})
exten => _+1NXXNXXXXXX/_011X.,n,Goto(from-pstn,${EXTEN:2},1)
exten => _+1NXXNXXXXXX,1,Goto(from-pstn,${EXTEN:2},1)
exten => _[0-9+]./_+1NXXNXXXXXX,1,Set(CALLERID(number)=${CALLERID(number):2})
exten => _[0-9+]./_NXXNXXXXXX,n,Goto(from-pstn,${EXTEN},1)
exten => _[0-9+]./_+X.,1,Set(CALLERID(number)=011${CALLERID(number):1})
exten => _[0-9+]./_011X.,n,Goto(from-pstn,${EXTEN},1)
exten => _[0-9+].,1,Goto(from-pstn,${EXTEN},1)
exten => s/_+1NXXNXXXXXX,1,Set(CALLERID(number)=${CALLERID(number):2})
exten => s/_NXXNXXXXXX,n,Goto(from-pstn,${EXTEN},1)
exten => s/_+X.,1,Set(CALLERID(number)=011${CALLERID(number):1})
exten => s/_011X.,n,Goto(from-pstn,${EXTEN},1)
exten => s,1,Goto(from-pstn,${EXTEN},1)

[from-pstn-to-did]
include =>from-pstn-to-did-custom
exten => _.,1,Goto(from-pstn,${CUT(CUT(SIP_HEADER(To),@,1),:,2)},1)

[ext-did]
include =>ext-did-custom
exten => _X.,1,Set(ORG_CODE=)
exten => _X.,n,Set(ORG_DOMAIN=)
exten => _X.,n,Set(ARRAY(ORG_CODE,__ORG_DOMAIN)=${DID_EXISTDID(${EXTEN})})
exten => _X.,n,GotoIf($["${ORG_CODE}"=""]?ext-did-catchall,s,1)
exten => _X.,n,Noop(Reciving call to organization with domain ${ORG_DOMAIN})
exten => _X.,n,Set(CDR(fromout)=1)
exten => _X.,n,Set(CDR(organization_domain)=${ORG_DOMAIN})
exten => _X.,n,Goto(${ORG_CODE}-from-pstn,${EXTEN},1)
exten => _X.,n,Macro(${ORG_CODE}-Hangupcall,)

[ext-did-catchall]
include =>ext-did-catchall-custom
exten => s,1,Noop(No DID or CID Match)
exten => s,n(a2),Answer
exten => s,n,Wait(2)
exten => s,n,Playback(ss-noservice)
exten => s,n,SayAlpha(${FROM_DID})
exten => s,n,Hangup
exten => _.,1,Set(__FROM_DID=${EXTEN})
exten => _.,n,Noop(Received an unknown call with DID set to ${EXTEN})
exten => _.,n,Goto(s,a2)
exten => h,1,Hangup

[salida-check]
include =>salida-check-custom
exten => s,1,Set(_REDIRECCIONAR=)
exten => s,n,Set(ORG_CODE=${ARG1})
exten => s,n,Set(_REDIRECCIONAR=${DID_INFODID(${ARG3},${ARG2})})
exten => s,n,GotoIf($["${REDIRECCIONAR}" = "1"]?indial)
exten => s,n,Set(outtrunk=continue)
exten => s,n,Return(${outtrunk})
exten => s,n(indial),Dial(Local/${ARG3}@from-pstn/n,60,${DIAL_TRUNK_OPTIONS}f(${CALLERID(all)}))
exten => s,n,Noop(TRUNK Dialed with ${DIALSTATUS} HANGUPCAUSE: ${HANGUPCAUSE})
exten => s,n,Hangup
exten => h,1,Macro(${ORG_CODE}-hangupcall,)

[intraforward-call]
include =>intraforward-call-custom
exten => s,1,Set(CDR(intraforward)=${ARG1})

[allow-out]
include =>allow-out-custom
exten => s,1,Noop(TRUNK ${OUT_${ARG2}} Organization: ${ARG1})
exten => s,n,Set(ORG_PERMIT=)
exten => s,n,Set(ORG_PERMIT=${TRUNK_INFOORG(${ARG1},${ARG2})})
exten => s,n,ExecIf($["${ORG_PERMIT}"!="1"]?Set(ORG_PERMIT=noallow))
exten => s,n,Return(${ORG_PERMIT})

[from-analog]
include =>from-analog-custom
exten => _X.,1,Set(DID=${EXTEN})
exten => _X.,n,Goto(s,1)
exten => s,1,Noop(Entering from-analog with DID == ${DID})
exten => s,n,Ringing()
exten => s,n,Set(DID=${IF($["${DID}"= "]?s:${DID})})
exten => s,n,Noop(DID is now ${DID})
exten => s,n,GotoIf($["${CHANNEL:0:5}"="DAHDI"]?dahdiok:checkzap)
exten => s,n(checkzap),GotoIf($["${CHANNEL:0:3}"="Zap"]?zapok:neither)
exten => s,n(neither),Gosub(${DID},1)
exten => s,n,Hangup
exten => s,n(dahdiok),Noop(Is a DAHDI Channel)
exten => s,n,Set(CHAN=${CHANNEL:6})
exten => s,n,Set(CHAN=${CUT(CHAN,-,1)})
exten => s,n,Macro(analog-did,${CHAN})
exten => s,n,Noop(Returned from Macro analog-did)
exten => s,n,Goto(from-pstn,${DID},1)
exten => s,n(zapok),Noop(Is a Zaptel Channel)
exten => s,n,Set(CHAN=${CHANNEL:4})
exten => s,n,Set(CHAN=${CUT(CHAN,-,1)})
exten => s,n,Macro(analog-did,${CHAN})
exten => s,n,Noop(Returned from Macro analog-did)
exten => s,n,Goto(from-pstn,${DID},1)

[macro-analog-did]
include =>macro-analog-did-custom
exten => s,1,Noop(Entering to macro analog-did from port_id: ${ARG1} with DID : ${DID})
exten => s,n,Set(RETDID=)
exten => s,n,Set(RETDID=${DID_ANALOGDID(${ARG1},${ARG2})})
exten => s,n,ExecIf($["${RETDID}"=""]?MacroExit())
exten => s,n,Set(__FROM_DID=${RETDID})
exten => s,n,Goto(from-pstn,${RETDID},1)

[im-sip]
include =>im-sip-custom
exten => im,1,Noop(Start SIP MESSAGE to ${MESSAGE(to)} from ${MESSAGE(from)})
exten => im,n,ExecIf($["${ARG2}" = ""]?Return())
exten => im,n,Set(FROM_PEER=${CUT(MESSAGE(from),:,2)})
exten => im,n,Set(FROM_PEER=${CUT(FROM_PEER,@,1)})
exten => im,n,Set(FROM_PEER_ALIAS=${DB(DEVICE/${ARG1}/${FROM_PEER}/alias)})
exten => im,n,ExecIf($["${FROM_PEER_ALIAS}" = ""]?SET(FROM_PEER_ALIAS=${FROM_PEER}))
exten => im,n,Set(FROM_PEER_NAME=${SIPPEER(${FROM_PEER},callerid_name)})
exten => im,n,Set(TO_PEER_ORG=${CUT(MESSAGE(to),:,2)})
exten => im,n,Set(TO_PEER_ORG=${CUT(TO_PEER_ORG,@,1)})
exten => im,n,Set(GROUP_MSG_STATUS=FAIL)
exten => im,n,While($["${SET(TO_PEER=${SHIFT(ARG2,&)})}" != ""])
exten => im,n,Set(TO_PEER_NAME=${SIPPEER(${TO_PEER},callerid_name)})
exten => im,n,Set(FROM_REPLACE=${STRREPLACE(MESSAGE(from),${FROM_PEER},${FROM_PEER_ALIAS})})
exten => im,n,MessageSend(sip:${TO_PEER},${FROM_REPLACE})
exten => im,n,Noop(Send status is ${MESSAGE_SEND_STATUS})
exten => im,n,ExecIf($["${MESSAGE_SEND_STATUS}" = "SUCCESS"]?SET(GROUP_MSG_STATUS=SUCCESS))
exten => im,n,EndWhile
exten => im,n,GotoIf($["${GROUP_MSG_STATUS}"!="SUCCESS"]?sendfailedmsg)
exten => im,n,Hangup
exten => im,n(sendfailedmsg),Noop(Sending error to user)
exten => im,n,Set(MESSAGE(body)=[${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)}] Your message to ${TO_PEER_NAME} has failed. Sending when available)
exten => im,n,MessageSend(sip:${FROM_PEER},"${TO_PEER_NAME}" <${MESSAGE(to)}>)
exten => im,n,Noop(Send status is ${MESSAGE_SEND_STATUS})
exten => im,n,Hangup
